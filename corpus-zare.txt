فصل اول: مقدمه
پیشرفت هوش مصنوعی در زمینه‌های مختلف در سال‌های اخیر باعث شده تا آحاد مردم نگاه ویژه‌ای به آن داشته باشند و مطالبه این موضوع که مسایل مختلفی را با استفاده از الگوریتم‌های هوش مصنوعی  بتوانند حل کنند مورد دور از ذهنی به شمار نمی‌آید. بسیاری از این مسایل مواردی هستند که در گذشته ما وجود داشته‌اند و در زمان خود به دلیل کمبود امکانات، فقدان تکنولوژی‌های لازم یا نبودن شرایط، این مسایل حل نشده‌اند که به صورت یک موضوع قابل بحث در دنیا مطرح می‌باشند. یکی از این مسایل که در حوزه هنر و تکنولوژی وجود دارد مربوط به زمانی است که اولین دوربین‌های عکاسی اختراع و به کارگیری شدند، زمانی که امکان ثبت تصاویر رنگی وجود نداشت و عکس‌ها به صورت تصاویر سیاه و سفید ثبت می‌شدند. 
 در سال ۱۶۱۱ دومینیس  نشان داد که نور مرئی از سه نور اساسی قرمز، سبز و آبی تشکیل شده‌است که به آن‌ها رنگهای اولیه می‌گویند. این مفهوم در توسعه نظریه عکس رنگی و عکاسی رنگی بسیار مفید واقع شد و در سال  1855 این عقیده کم کم قوت گرفت که برای توسعه تصویر رنگی، یک فیلمی از سه لایه باید ساخت که هر لایه آن نسبت به یکی از سه رنگ اولیه حساس باشد.]1[ این نظریه توسط ماکسول  دانشمند معروف اسکاتلندی ارائه شد و او بود که برای اولین بار عکس رنگی را در 17 می 1861 در آزمایشگاه موسسه رویال ثبت کرد، نتایج به دست آمده توسط وی بعدها با نظریه جدید مربوط به این فن، کاملاً مطابقت داشت. اولین دوربین‌های عکاسی و فیلمبرداری ساخته شده در دنیا قابلیت گرفتن تصاویر رنگی را نداشتند و تصاویری که توسط آن‌ها ذخیره شده است سیاه و سفید می‌باشد. ]2[ پس از کشف ترکیبات رنگی حساس به رنگ‌های نور و فیلم سیاه و سفید پنکرومیک، تکنیک عکاسی رنگی توسعه یافت و عمومیت یافتن آن به ظهور کوداکروم  مربوط می‌شود که در سال ۱۹۳۵ در دسترس مصرف کنندگان قرار گرفت. البته به دلیل قیمت بالای دوربین‌های عکاسی مجهز به این سیستم تا سال 1959 تصاویر سیاه و سفید زیادی ثبت شده‌اند، در سال 1959 کمپانی آگفا  و نیکون  دوربین‌های عکاسی رنگی آنالوگ نسبتا ارزان‌تری را روانه بازار کردند که باعث افزایش و فراگیری نسبی ثبت تصاویر رنگی شد. این دوربین‌ها دارای فیلم عکس‌برداری بودند که از جنس پلاستیک و آغشته به مواد شیمایی بود. فیلم‌ها به نور حساس بوده و در لحظه عکاسی، تصویر را توسط نور تابانده شده از لنز دوربین ثبت می‌کردند. پس از ثبت عکس برای دیدن و چاپ آن‌ها فیلم‌ها باید ظاهر می‌شدند. ظهور در عکاسی به معنای مواجهه دادن فیلم عکاسی یا کاغذ عکاسی با مواد شیمیایی است که باعث تبدیل شدن فیلم به یک تصویر منفی (نگاتیو ) یا مثبت (اسلاید ) یا کاغذ به تصویر عکس می‌شود. این اولین مرحله ظهور در مورد فیلم و کاغذ است. هدف از ظهور این است که تصویر موقتی که روی فیلم یا کاغذ عکاسی نقش بسته را تبدیل به یک تصویر دائم، قابل دیده شدن، و غیر حساس به نور بکند. توقف، ثبوت و شست‌وشو، مراحل بعدی به‌دست‌آوریِ تصویر ثابت است. در سال 1995 اولین دوربین‌های عکاسی دیجیتال توسط کمپانی‌های کوداک  و اپل  به بازار عرضه شد. عکاسی دیجیتال به فرایند ثبت تصاویر به وسیله دریافت و ثبت نور بر روی سطح حساس به نور حسگر  الکترونیکی گفته می‌شود. الگوهای نوری بازتابیده شده یا ساطع شده از اشیاء بر روی سطح حساس به نور حسگر تأثیر می‌گذارد و باعث ثبت تصاویر می‌گردد. آسانی نسبی استفاده، سرعت بالا برای بازدید عکس ثبت شده، انتقال و چاپ و نیز در بسیاری از موارد، کیفیت برتر، تعدادی از ویژگی‌های متمایزکننده عکاسی دیجیتال هستند. در عکاسی دیجیتال، حسگر  وظیفه ثبت تصویر را بر عهده دارد و هیچ‌کدام از حسگرها به صورت مستقیم قادر به شناسایی رنگ‌ها نیستند و فقط می‌توانند شدت روشنایی نور را ثبت کنند. هر حسگر از میلیون‌ها حسگر ریز حساس به نور تشکیل شده و هرکدام از این حسگرهای ریز غالباً یک پیکسل از عکس نهایی را ثبت می‌کند.]3[
هوش مصنوعی 
هوش مصنوعی، به هوش و رفتاری که یک ماشین یا سیستم در شرایط مختلف و با توجه به پیچیدگی‌های محیط از خود نشان می‌دهد، گفته می‌شود. به عبارت دیگر سیستم های هوشمند  به سیستم‌هایی گفته می‌شود که می‌توانند واکنش‌هایی مشابه با رفتارهای انسان از جمله درک شرایط پیچیده، شبیه‌سازی فرآیندهای ذهنی و شیوه‌های استدلال انسان گونه و پاسخ موفق به آن‌ها، یادگیری و توانایی کسب و کشف دانش و استدلال برای حل مسایل مختلف را داشته باشند. 
امروزه هوش مصنوعی در مسایل زیادی به کمک انسان‌ها آمده، صنایع مختلف از قبیل صنایع نظامی، پزشکی، هوا و فضا، تولیدی‌ها و غیره در سطوح مختلف از ابزارهای تولید شده توسط هوش مصنوعی  یا در تصمیم‌گیری‌های مختلف به صورت مستقیم یا غیر مستقیم از هوش مصنوعی استفاده‌ می‌کنند، البته هوش مصنوعی تنها در صنایع نقش آفرینی نمی‌کند و امروزه هنر، علوم انسانی و حتی ماشین‌های ترجمه از الگوریتم‌های این رشته استفاده می‌کنند. سیستم‌های نرم افزاری و سخت افزاری مجهز به هوش مصنوعی بسیاری با اهداف مشخص در دنیای امروز وجود دارند که ما تقریبا هر روزه با آن‌ها سر و کار داریم، از سیستم-های توصیه‌گر  شبکه‌های اجتماعی که برای یافتن دوستان وجود دارند، تا سیستم تشخیص چهره  برای باز شدن قفل گوشی هوشمند و شاید هزاران سیستم دیگر که اجزای جدا ناپذیر زندگی افراد جامعه شده‌اند.
پیشرفت چشمگیر و روزافزون هوش مصنوعی در تمامی حوزه‌ها باعث شده است تا جوامع علمی نگاه ویژه‌ای به این رشته داشته باشند و پژوهشگران همواره سعی در پیدا کردن الگوریتم‌های جدید و مختلف برای حل مسایل مختلف توسط این حوزه را دارند. این پیشرفت تا جایی پیشرفت کرده است که مدیر عامل کمپانی انویدیا، جنسن هوانگ  معتقد است هوش مصنوعی قدرتمند ترین نیروی زمانه ما است . به جرات می‌توان گفت امروزه بزرگترین شرکت‌های حوزه تکنولوژی بیشترین تبلیغات را در محصولاتی دارند که از هوش مصنوعی به طرز بهتری استفاده می‌کند. هوش مصنوعی به رشته‌های متعددی تقسیم می‌گردد که برخی از آن‌ها عبارتند از: داده کاوی ، بینایی ماشین ، یادگیری ماشین ، پردازش زبان طبیعی ، سیستم‌های خبره  و مفاهیم مربوط به رباتیک .
یادگیری ماشین
یادگیری ماشین یکی از زیرشاخه های پرکاربرد هوش مصنوعی می‌باشد که وظیفه کشف دانش در داده‌های موجود از طریق آنالیز و یادگیری آن‌ها و هم‌چنین پژوهش در مورد چگونگی آموزش دیدن ماشین بر اساس داده‌های موجود برای حل مسایل را دارد. الگوریتم‌های این رشته عموما بر اساس داده‌های موجود در مسایل شروع به یادگیری چگونگی حل مسایل در مورد آن‌ها می‌کند و همان‌گونه که از اسم آن مشخص می‌باشد وظیفه پژوهشگران این حوزه یافتن الگوریتم‌هایی می‌باشد که ماشین بتواند توسط آن‌ها و براساس داده‌های موجود کسب تجربه کند، آموزش ببینید و سپس بتواند مسایل مرتبط با موارد آموزش داده شده را شبیه انسان حل نماید. 
الگوریتم‌های مبتنی بر یادگیری ماشین در موارد زیادی امروزه کاربرد دارند، برای مثال یکی از این مسایل در حوزه پیش‌بینی‌ها می‌باشد، پیش‌بینی وضعیت آب و هوا در آینده، پیش‌بینی وضعیت یک سهام در بورس، پیش‌بینی بیمار بودن یا نبودن یک فرد و موارد این‌چنینی همگی توسط الگوریتم‌های یادگیری ماشین و با توجه به داده‌های موجود قدیم و فعلی صورت می‌گیرد. در مسایل پیش‌بینی به طور عمومی از قبل داده‌های زیادی همراه با برچسب آن‌ها گردآوری شده است، برای مثال در مساله پیش‌بینی وضعیت آب و هوا برچسب‌ها ابری، بارانی، خورشیدی، برفی و موارد این‌چنینی می‌تواند باشد و با داشتن داده‌های قبلی و مسایل تاثیر گذار در آب و هوا از قبیل دما، رطوبت، سرعت و جهت باد و غیره به عنوان ورودی، سیستم آموزش می‌بیند که در چه زمانی و با چه ورودی‌هایی یکی از برچسب‌ها حاصل می‌گردد، سپس با داشتن شرایط نسبی کنونی می‌تواند در مورد آینده پیش-بینی کند که در عمل یک داده ورودی دیگر را باید به یکی از برچسب‌های موجود نسبت بدهد که به آن عملیات کلاسه‌بندی  می-گویند، این مورد قابل تعمیم برای مسایل پیش‌بینی دیگر نیز می‌باشد، از این رو به این گونه آموزش‌ها که در آن از قبل برچسب‌ها تعبیه شده در اصطلاح یادگیری دارای نظرات می‌گویند.
مسایل بیشتری در دنیا وجود دارد که به وسیله الگوریتم‌های یادگیری ماشین حل می‌شوند یکی دیگر از این مسایل زمانی است که داده‌های ما دارای برچسب نیستند و هدف پیدا کردن داده‌های مشابه از نظر یک معیار شباهت مشخص می‌باشد، الگوریتم‌های زیادی در این رابطه نیز وجود دارد که در ادامه و با توجه به مسایل موجود در مساله این پایان نامه با روند و چگونگی انجام آن‌ها بیشتر آشنا می‌شویم، به عملیات پیداکردن داده‌های دارای شباهت و قرار دادن آن‌ها در خوشه‌های مختلف خوشه‌بندی  می گویند.
در یک دسته‌بندی کلی می‌توان روش‌های یادگیری ماشین را به سه دسته: یادگیری با نظارت ، یادگیری بدون نظارت  و یادگیری نیمه نظارتی  تقسیم کرد.]4[
1-2- پردازش تصویر 
پردازش تصویر یکی دیگر از زیرشاخه های هوش مصنوعی است. برای شناخت پردازش تصویر نیاز داریم در ابتدا تصاویر دیجیتال را درک کنیم، هر تصویر دیجیتال در حقیقت یک تصویر آنالوگ تبدیل شده به شکل عددی به منظور استفاده در کامپیوتر می‌باشد. هر تصویر متشکل از نقاط کوچک‌تری  می‌باشد که به نام پیکسل  آن‌ها را می‌شناسیم، در حقیقت کوچکترین واحد ذخیره‌سازی تصویر دیجیتال پیکسل می‌باشد. هر پیکسل یک ساختار نرم افزاری می‌باشد که در مُدهای مختلفی تعریف می‌گردد که معروف‌ترین آن‌ها: خاکستری(سیاه وسفید)، رنگی آر جی بی ، رنگی متشکل اچ اس وی و چندین مُد دیگر می‌باشد. 
 هر تصویر رنگی دیجیتال به صورت یک ماتریس دو بعدی متشکل از پیکسل‌ها می‌باشد که در مُد رنگی آر جی بی دارای سه لایه رنگی قرمز، سبز و آبی می‌باشد، هر لایه به تنهایی خود یک ماتریس دو بعدی می‌باشد که هر عنصر آن یک عدد 8 بیت ی یعنی عددی بین صفر تا 255 است. به بیان دیگر هر پیکسل، متشکل از سه عدد 8 بیتی می‌باشد که هر کدام از آن‌ها در یک لایه رنگی قرار دارند و به معنای شدت روشنایی آن لایه می‌باشد، برای مثال یک پیکسل به رنگ قرمز کامل باید در لایه-ی قرمز معادل 255 باشد و در دو لایه سبز و آبی معادل صفز باشد، رنگ‌های ترکیبی نیز از این اعداد ساخته می‌شوند برای مثال رنگ زرد کامل که متشکل از رنگ‌های قرمز و سبز می باشد باید در لایه های قرمز و سبز معادل 255 و در لایه آبی معادل صفر باشد. رنگ سیاه در مُد آر جی بی برابر صفر در هر سه لایه و رنگ سفید برابر 255 در هر سه لایه می‌باشد، با این تعریف می‌توان درک کرد که اگر لایه قرمز را برابر عددی کمتر از 255 بگذاریم و دو لایه دیگر صفر باشند رنگ به وجود آمده قرمزی تیره‌تر نسبت به قرمز کامل خواهد بود، هر چه مقدار لایه قرمز به صفر نزدیک‌تر شود رنگ قرمز ساخته شده تیره‌تر خواهد شد و در صفر سیاه مطلق خواهیم داشت. اگر لایه قرمز 255 باشد و دو لایه دیگر را عددی مساوی و بزرگتر از صفر قرار دهیم رنگ به وجود آمده قرمزی روشن‌تر از قرمز کامل خواهد شد و در 255 سفید مطلق خواهیم داشت. 
هر چه پیکسل‌های یک تصویر دیجیتال اعدادی نزدیک‌تر به 255 داشته باشند تصویر روشن‌تر است و اگر پیکسل‌ها به صفر نزدیک‌تر باشند تصویر تیره‌تر خواهد بود.
تصاویر دارای سطوح خاکستری  (سیاه و سفید) دارای یک لایه رنگ می‌باشند و آن رنگ خاکستری است که این لایه نیز یک ماتریس دو بعدی با پیکسل‌های 8 بیتی می‌باشد، با این تعریف می‌توان دریافت که در هر پیکسل رنگی امکان ساخته شدن 256x256x256 تعداد رنگ وجود دارد، که این به آن معناست که تعداد ۱۶،۷۷۷،۲۱۶ رنگ مختلف وجود دارد که می‌تواند در یک پیکسل رنگی قرار بگیرد، این در حالی است که در هر پیکسل سطح خاکستری امکان قرار گرفتن فقط 256 حالت مختلف وجود دارد.
علم به کارگیری تکنیک‌های قابل اعمال بر روی تصاویر دیجیتال اعم از تکنیک‌های ریاضیاتی، آماری و غیره را پردازش تصویر نامیده می‌شود. دامنه دنیای پردازش تصویر بسیار وسیع است، تصاویر دیجیتال امروزه زندگی انسان‌ها را در اختیار گرفته-اند. تصاویر ثبت شده با دوربین‌های تلفن‌های هوشمند، تصاویر اسکن  شده مدارک، تصاویر طراحی شده بوسیله کامپیوتر جهت چاپ و غیره همگی نشان از این دارند که تصاویر دیجیتال جزیی از زندگی همه‌ی انسان‌ها شده‌اند و برای هر کدام از این تصاویر و مسایل پیش روی آن پردازش تصویر وارد عمل شده و پژوهشگران این حوزه در صدد ایجاد راهکارهای مختلف هستند، حال این مساله می‌تواند شناسایی پلاک یک خودرو در حین تخلف باشد، شناسایی محل قرارگیری چهره در دوربین عکاسی برای قرار دادن تمرکز لنز بر روی آن ناحیه باشد، بهبود مدرک اسکن شده قدیمی، شناسایی حروف از روی دستونشته‌ها یا رنگی سازی تصاویر دارای سطوح خاکستری باشد.
1-3- شبه رنگ آمیزی 
 تصاویری که در بازه سال‌های 1822 (تاریخی که اولین دوربین عکاسی ساخته شد) تا 1935 (تاریخی که دوربین‌های عکاسی رنگی  اختراع شدند) ثبت شده‌اند همگی به صورت سیاه و سفید ذخیره شده‌اند و از سال 1935 تا 1959 نیز تصاویر زیادی به صورت سیاه و سفید ذخیره شدند، در نتیجه رنگ محیط عکسبرداری شده در تصاویر موجود نمی‌باشد، به همین علت فرآیندی که بتواند تصاویر سیاه و سفید را به تصاویر رنگی تبدیل کند فرآیند شبه رنگ آمیزی نام دارد. البته شبه رنگ آمیزی تصاویر سیاه و سفید در دنیای امروز از ابعاد مختلفی دارای اهمیت است. در حوزه نظامی و پزشکی، تصاویری که به دلایل مختلف کیفیت رنگی خود را از دست داده‌اند، فشرده‌سازی  تصاویر و بهبود شناخت مناطق در تصاویر هوایی چندین مورد از کاربردهای رنگی سازی تصاویر می‌باشند. اسناد و مدارک بصری  زیادی وجود دارد که به دلیل قدمت تاریخی از اهمیت بالایی برخوردار هستند برای مثال تصاویر قدیمی عمارت‌هایی که دیگر وجود ندارند، اشخاص مهم و ابزارآلات کهن، در حالی که آن‌ها در قالب تصاویر دارای سطوح خاکستری هستند و رنگی شدن آن‌ها می‌تواند کمک شایانی به برخی از مسایل موجود در علوم تاریخی، حقوقی، هنری، جغرافیایی، سیاسی و غیره کند، لذا این اهمیت، انگیزه تحقیق و توسعه روش‌های رنگی سازی تصاویر دارای سطوح خاکستری را بیش از پیش روشن می سازد. برای بهتر روشن شدن موضوع شاید بهتر است ابتدا بدانیم که چشم انسان قابلیت تشخیص چند رنگ را دارد که البته مشکل اصلی آن است که هیچکس نمی‌داند واقعا چشم انسان قادر به تشخیص چند رنگ است. بهترین تخمین دانشمندان میلیون ها میلیون رنگ است. آزمایش‌های علمی نشان داده است که چشم انسان قادر به تشخیص تفاوت-های بسیار جزئی در رنگ است و تخمین زده می‌شود این تعداد به بیش از 10 میلیون رنگ می‌رسد . 
البته چشم هر فرد رنگ‌ها را، با تغییرات جزئی، متفاوت می‌بیند و هر فرهنگی نام‌های خاص خود را بر روی رنگ‌ها گذاشته است. بنابراین بدست آوردن تعداد دقیق رنگ‌ها غیرممکن به نظر می‌رسد اگرچه با فرض 10 میلیون رنگ نیز نشان می‌دهد دیدن یک تصویر سیاه و سفید انسان را دچار محدودیت می‌کند و طبیعتا با دیدن تصویر رنگی عکس‌های سیاه و سفیدی که می‌دانیم به صورت سیاه و سفید ثبت شده‌اند حس خوبی به انسان می‌دهد. برای مثال تصویر 1-1 برج آزادی در تهران را در حال ساخت نشان می‌دهد که توسط الگوریتم پیشنهادی این پایان نامه رنگی شده است.
 
تصویر1-1-  نمونه رنگ آمیزی شده توسط الگوریتم پیشنهادی این پایان نامه
4-1- بیان مساله و فرضیات
 با توجه به ضرورت مساله که پیش‌تر ذکر شد، در این پایان نامه در صدد ارائه راه حلی برای رنگی سازی تصاویر سیاه و سفید می‌باشیم. همان‌گونه که اشاره کردیم هر پیکسل خاکستری فقط 256 سطح خاکستری را می‌توانست داشته باشد و هر پیکسل رنگی بیش از 16 میلیون رنگ را می‌توانست تشکیل بدهد، پس این موضوع خود یک نگاشت  از ابعاد 256 به ابعاد بیش از 16 میلیون می‌باشد که نشان دهنده پیچیدگی‌های بالای مساله می‌باشد. به عبارت دیگر برای 256 حالت موجود در هر پیکسل تک ماتریس خاکستری بیش از 16 میلیون حالت در سه ماتریس رنگی قرمز، سبز و آبی وجود دارد. در ریاضیات به مسایلی که دارای سه ویژگی اصلی باشند مسایل خوش طرح  می‌گویند، این سه ویژگی برای مساله عبارتند از : 1. برای مساله یک حل وجود داشته باشد، 2. حل، منحصر به فرد باشد و 3. رفتار حل به‌طور پیوسته با شرایط اولیه تغییر کند. مسایلی که این سه شرط را نداشته باشند به عنوان مسایل بد طرح  شناخته می‌شوند. عموم مسایل بدطرح از مسایل معکوس  هستند. برای مثال فرض کنید در یک جدول سودوکو  تعداد اعداد اولیه‌ای که برای راهنمایی به بازیکن داده می‌شود بسیار کم باشد، در این حالت برای پر کردن جدول جواب‌های متعددی وجود دارد و جواب یکتایی برای مساله وجود ندارد، حال فرض کنید که فقط یکی از این جدوال پر شده جواب مورد انتظار می‌باشد، رسیدن به آن جواب با توجه به داده‌های اولیه کم بسیار مشکل می‌باشد و این مساله بد طرح می-باشد. مساله عنوان شده در این پایان نامه نیز به همین شکل می‌باشد، اعداد ورودی مساله شدت یک سطح خاکستری می‌باشد که بین صفر تا 255 می‌باشد و فرض کنید آن عدد 128 می‌باشد، ما باید این سطح خاکستری را تبدیل به یک رنگ کنیم که در ابتدا آن رنگ بتواند در زمان تبدیل به یک سطح خاکستری عدد 128 را بسازد و آن رنگ جواب ما نیز باشد. تعداد رنگ‌هایی که می-توانند سطح خاکستری 128 را بسازند حدود 110،000 عدد می‌باشد و فقط یکی از آن‌ها جواب مورد نظر است به همین دلیل مساله پیش رو یک مساله بد طرح تلقی می‌شود، به این مفهوم که یک راه حل اثبات شده یا راه حل یکتا برای آن وجود ندارد. 
سطح خاکستری در واقع یک مد  خاص از تصاویر دیجیتال است که در آن حوزه‌ی رنگی پیکسل‌ها  به تک رنگ خاکستری محدود شده است. هر لایه خاکستری می‌تواند از روی لایه‌ی رنگی تصاویر ساخته شود، برای تبدیل هر پیکسل از سه لایه‌‌ی رنگ-های قرمز، سبز و آبی به یک لایه خاکستری از فرمول 1 استفاده می‌شود:
     I_gray= 0.298×R+0.587×G+0.114×B
که در آن R به معنای عدد ذخیره شده در لایه قرمز، G عدد ذخیره شده در لایه سبز و B عدد ذخیره شده در لایه آبی می‌باشد. 
چالش اصلی مساله دقیقا در همین‌جا می‌باشد که ما قصد داریم از روی تک لایه خاکستری لایه‌های قرمز، سبز و آبی را بازسازی کنیم یعنی یک پیکسل سطح خاکستری را به یک پیکسل رنگی تبدیل کنیم  بعبارت دیگر، معکوس عملیات آن چه در بالا توضیح داده شد  مدنظر است که البته متاسفانه تاکنون یک روش یکتا برای آن وجود ندارد. این یک نگاشت از 256 حالت به 2563  حالت می‌باشد که ابعاد پیچیدگی مساله را بالا می‌برد آن‌چنان که در بهترین حالت یعنی پیکسل‌های دارای سطح خاکستری معادل 0 یا 255 از یک حالت سه لایه رنگی قرمز، سبز و آبی می‌توانند ساخته بشوند، اما در بدترین حالت یعنی برای سطوح خاکستری میانی ( محدوده مقادیر شدت خاکستری 100 تا 150) بیش از 110،000 حالت مختلف برای اعداد لایه های قرمز، سیز و آبی وجود دارد که با قرار دادن آن‌ها در فرمول 1 می‌توان آن سطح خاکستری میانی را ایجاد کرد]5[. به بیان دیگر، بعنوان مثال برای یک سطح خاکستری که شدت روشنایی آن 128 است حدود 150 هزار گزینه پیشنهادی وجود دارد بنابراین اگر قصد رنگی سازی یک پیکسل با شدت خاکستری 128 را داشته باشیم عملا امکان تولید 110 هزار تصویر می باشد که قطعا یکی از این 110 هزار تصویر هدف صحیح است. تصویر شماره 1-2 نشان می‌دهد با استفاده از فرمول 1 و قرار دادن تمامی جایگشت‌های ممکن در سه لایه رنگی قرمز، سبز و آبی برای هر سطح خاکستری چند حالت رنگی وجود دارد که آن سطح خاکستری را می‌سازد.
 
نمودار 1-1- تعداد سطوح رنگی که می توانند یک سطح خاکستری را بسازند.
این پایان نامه در 5 فصل تنظیم شده است، که پس از مقدمه که در فصل اول آورده شد؛ در فصل دوم نگاهی کلی بر روی تحقیقات و روش‌های پیشین خواهیم داشت. در فصل سوم به بررسی مبانی نظری تحقیق و تئوری ها و فرضیات موجود می‌پردازیم و روش پیشنهادی ما در این پژوهش نیز توضیح داده می‌شود و در فصل چهارم نتایج تجربی و ارزیابی اولیه آن‌ها قرار گرفته است. در فصل پنجم نیز خلاصه ای از نتیجه پژوهش و نتیجه‌گیری به همراه پیشنهادات موجود برای ادامه تحقیقات قابل استفاده برای پژوهشگران آینده ارائه می‌گردد.

فصل دوم: پیشینه‌ی پژوهش
مساله شبه رنگ آمیزی تصاویر سیاه و سفید یکی از موضوعات بسیار جذاب است که اخیرا با توجه به پیشرفت های موجود، توجه بسیاری از پژوهشگران این حوزه را به خود جلب کرده است. در این راستا به خصوص اخیرا کارهای ارزشمندی انجام شده است، هم چنین پیشرفت هوش مصنوعی و الگوریتم‌های این حوزه و منجر شدن این پیشرفت‌ها به پیدایش حوزه یادگیری عمیق باعث هر چه بیشتر علاقه‌مند شدن فعالان پژوهش در این حوزه شده است، که در ادامه به برخی از آن‌ها اشاره می‌کنیم.

2-1- شبه رنگ آمیزی تصاویر دارای سطوح خاکستری
(محمد زارع و دیگران 2011) نشان دادند که پیدا کردن ماتریس نگاشت تصاویر دارای سطوح خاکستری به تصاویر رنگی از روی یک تصویر نمونه که توسط ناظر سیستم به آن داده می شود می‌تواند راهکاری مناسب برای رنگ آمیزی تصاویر دارای سطح خاکستری باشد، البته الگوریتم رنگ آمیزی نباید نگاشت مستقیم باشد و در واقع یک نگاشت سوق دهنده می باشد. الگوریتم پیشنهادی آن‌ها این بود که در ابتدا تصویر نمونه را مورد ارزیابی قرار می‌دادند، به این صورت که هر پیکسل رنگی را در ابتدا به یک سطح خاکستری تبدیل کرده و آن‌ها را در یک ماتریس که تعداد سطرهای آن 256 عدد بود و در سطر متناظر با سطح خاکستری به دست آمده، ذخیره شوند. این ماتریس به عنوان ماتریس نگاشت مورد استفاده قرار می‌گیرد. پس از ذخیره سازی همه پیکسل‌های رنگی از رنگ های به وجود آمده در هر سطر میانگین گرفته ‌شده و رنگ به دست آمده، به آن سطح خاکستری منتسب می‌شود. در پایان، برای رنگ آمیزی تصاویر دارای سطوح خاکستری، به ازای هر پیکسل موجود در تصویر و با استفاده از رنگ منتسب به آن سطح یک رنگ ساخته ‌شده و جایگزین سطح خاکستری فعلی می‌شود. طرز کار این الگوریتم ساده و در عین حال در زمان خود مورد خوبی به شمار می‌آمده است. تصویر شماره 2-1 نتایج این الگوریتم را نشان می‌دهد.
 
تصویر2-1- نتایج کار الگوریتم پیشنهادی [۵]

در تصویر بالا تصویر دارای سطوح خاکستری به عنوان ورودی می‌باشد، دو تصویر b1 و b2 به عنوان نمونه آزمایشی و توسط کاربر سیستم داده می‌شود و برای هر کدام از تصاویر، با کمک تصویر راهنما یک نمونه خروجی تولید می‌شود که در تصویر مشاهده می‌کنید. یکی از مواردی که در این الگوریتم به چشم می‌آید و می‌توان از آن به عنوان چالش روش پیشنهادی یاد کرد این است که برای انجام عملیات رنگی سازی احتیاج به تصویر راهنما دارد و از طرفی برای هر سطح خاکستری فقط یک نگاشت وجود دارد که این مورد باعث می‌شود تنوع رنگ‌ها در رنگ آمیزی کم شود.]5[
(لارسن  و همکاران 2017) با ارائه یک روش برای شبه رنگ آمیزی تصاویر دارای سطوح خاکستری و با استفاده از الگوریتم-های یادگیری ماشین پژوهشی را انجام دادند، روش آن‌ها به این صورت می‌باشد که در ابتدا مُد  رنگی را از حالت سه رنگ اصلی قرمز، سبز و آبی به مُد رنگی دیگری به نام HSL تغییر می‌دهند. مُد رنگی HSL همانند مُد رنگی مبتنی بر سه رنگ اصلی از 3 لایه تشکیل شده است، این سه لایه عبارتند از: زاویه رنگی ، شدت رنگ  و نور . روش آدرس‌دهی در فضای سه بعدی توسط این مُد به صورت استوانه‌ای می‌باشد، به طرزی که زاویه رنگی شامل زاویه ای خواهد بود که تعیین کننده رنگ بر روی یک دایره رنگی می‌باشد، زاویه 0 برابر رنگ قرمز، زاویه 120 رنگ سبز و 240 رنگ آبی می‌باشد و زوایای بین این اعداد رنگ‌های ترکیبی دو رنگ طرف می‌باشد. تصویر 2-2 این دایره را نشان می‌دهد:
 
تصویر 2-2- دایره رنگی و زوایای رنگی
بدیهی است حوزه تغییرات این زاویه بین 0 تا 359 می باشد.
عدد دوم در این مُد شدت رنگی می باشد که عددی بین 0 تا 1 می‌باشد و فاصله تا مرکز دایره را نشان می‌دهد، این فاصله هر چه به مرکز دایره یعنی عدد 0 نزدیکتر باشد شدت رنگی کمتری وجود دارد، چنان که روی مرکز منطقه عدم وجود رنگ‌ها و محیط دایره دارای بیشترین شدت رنگ‌ها می‌باشد.
عدد سوم این مُد شدت نور یا همان میزان ارتفاع در استوانه می‌باشد. ارتفاع پایین تر به معنای نور کمتر می‌باشد و به رنگ سیاه نزدیک‌تر می شود و ارتفاع بالاتر به معنای نورهای بیشتر می‌باشد و به رنگ سفید نزدیک‌تر می‌شود، حوزه تغییرات این عدد نیز بین 0 تا 1 می‌باشد. تصویر 2-3 استوانه منتسب به مُد رنگی HSL را نشان می‌دهد:
 
تصویر 2-3- استوانه منتسب به مد رنگی HSL

زمانی که در مُد HSL یک پیکسل رنگی را به یک پیکسل سطح خاکستری تبدیل می‌کنیم در اصل مقدار زاویه رنگ و شدت رنگ را برابر صفر قرار می‌دهیم و فقط عدد مربوط به نور یا همان ارتفاع را نیاز داریم. با این تعریف ایده (لارسن و همکاران 2017) شکل گرفت و سعی کردند فقط با داشتن میزان نور (تصویر دارای سطوح خاکستری) نگاشت میزان نور به مُد HSL را توسط الگوریتم‌های یادگیری ماشین انجام دهند]6 و 7[.
تصویر 2-4 نشان دهنده الگوریتم پیشنهادی آن‌ها می‌باشد.
 
تصویر 2-4- الگوریتم پیشنهادی [۶]

همانطور که در تصویر مشاهده می‌کنید نقطه p در تصویر دارای سطوح خاکستری و متناظر آن در تصویر رنگیِ ساخته شده، مشخص شده است. میزان نور از تصویر ورودی و درجه رنگی و میزان شدت رنگ از خروجی شبکه عصبی پیچشی  آموزش دیده ساخته می‌شود.
اگر چه با این روش آموزش‌های مناسب و سریعی خواهیم داشت اما ایراد اصلی این الگوریتم در جایی است که میزان شدت رنگ را به یک عدد صحیح در بازه 0 تا 100 تبدیل نموده‌اند و در عمل میزان قابل توجهی از داده‌های مهم را از بین برده‌اند، به همین علت است که در نتایج آورده شده (تصویر 2-5) در این پژوهش مشاهده می‌شود که الگوریتم قابلیت ساخت تمامی رنگ‌ها را ندارد.
 
تصویر 2-5- خروجی الگوریتم پیشنهادی [۶]

 ( جایادوان  و دیگران، 2014) نیز نشان دادند که استخراج ویژگی‌های یک تصویر از قبیل میزان وجود هر رنگ، اجزای شناسایی شده در تصویر و موارد دیگر با استفاده از تبدیل کنتورلت  و ذخیره‌سازی این ویژگی‌ها به همراه نتایج تبدیل کنتورلت در پایگاه‌داده  در شناسایی تصویر رنگی مشابه از لحاظ محتوا با تصویر دارای سطوح خاکستری دقت بیشتری نسبت به سایر روش‌ها دارد، این کار به این دلیل انجام می‌شد که بتوان تصویر رنگی مشابه‌ای برای رنگی سازی تصویر دارای سطوح خاکستری پیدا کرد]8[، اما نتایج آن ها از نظر بصری ضعیف بود البته آن‌ها کار خود را بسط داده و در پژوهش دیگر (جایادوان  و دیگران، 2015) با استفاده از تصاویر رنگی ذخیره شده در پایگاه‌داده و با آنالیز تصویر دارای سطح خاکستری سعی در یافتن تصویر(های) رنگی مشابه و بهتری با محتوایی نزدیک به تصویر دارای سطح خاکستری نمودند و با تصاویر یافت شده در پایگاه-داده، ماتریس نگاشتی را طراحی کرده و با استفاده از یک دسته‌بند برای تصمیم‌گیریِ استفاده از کدام رنگ موجود در ماتریس نگاشتِ آن سطح خاکستری، برای هر سطح با توجه به همسایگی پیکسل‌ها و بقیه اجزای تصویر دارای سطوح خاکستری، بر روی تصویر دارای سطح خاکستری اعمال کردند که نتیجه آن‌ها نسبت به کارهای پیشین بهتر شد. [١۰] البته هم‌چنان ضعف‌هایی در کار آن‌ها نیز وجود داشت که از مهم‌ترین آن‌ها می‌توان پایین بودن دقت و هماهنگ نبودن رنگ‌های اصلی در خروجی کار را نام برد.
(جمیل  و دیگران، 2016) با توجه به این موضوع که همه تصاویر موجود در دنیا تصاویر پیچیده‌ای نیستند و تصاویری وجود دارند که تنوع رنگی در آن‌ها پایین‌ می‌باشد و از طرف دیگر در متن این‌گونه تصاویر لبه‌های زیادی وجود ندارند، اذعان کردند برای نگاشت چنین تصاویری از مُد خاکستری به مُد رنگی می‌توان از چند رنگ اصلی استفاده کرد و با یک ماتریس چند سطری در بازه‌های مختلف سطوح خاکستری پیکسل‌ها را به رنگ‌های تعریف شده نگاشت کرد. ]10[ همان‌گونه که از ایده اولیه پیداست این کار برای برخی از تصاویر ساده نتایج خوبی خواهد داشت، اما این الگوریتم برای تصاویر با پیچیدگی بالاتر و دارای لبه‌های بیشتر از قبیل تصاویر جنگل، تصاویر شهری، تصاویر چهره انسان و مواردی از این قبیل به هیچ عنوان روش مناسبی نبوده و قابلیت انعطاف زیادی را ندارد.
(آدیتیا  و دیگران، 2017) نشان دادند در تصاویر رادیولوژی در صورتی که بتوان تصویر را بهبود داد و عملیات یکپارچه‌سازی را بر روی آن اعمال کرد یک تصویر با سطوح خاکستری، خروجی کار خواهد بود، برای اینکه بتوان این تصویر را به یک تصویر رنگی مناسب جهت تصمیم‌گیری متخصصان حوزه پزشکی تبدیل کرد یک نگاشت از 256 حالت به 4 حالت رنگی تعریف کرده و سپس عملیات نگاشت را به 4 رنگ اصلی انجام می‌دهیم، این روش برای مصارف پزشکی که سعی در یافتن طیف رنگی ناهماهنگ با سایر نقاط همسایه را دارد روش مناسبی می‌باشد]11[، اما برای استفاده در عکس‌های غیر پزشکی کاربرد چندانی ندارد، دلیل این امر هم این است که در تصاویر غیرپزشکی تنوع رنگی بسیار بیشتری از 4 رنگ وجود دارد و طیف‌های گسترده‌تری از رنگ‌ها وجود دارد. (هسکو  و دیگران، 2017) نیز نشان دادند تصاویری که با پرتاب لیزر و در صنعت پزشکی گرفته می‌شوند، برای شناسایی بخش‌های دارای ایراد نیاز به مشخص‌سازی برای انسان دارند، به همین دلیل با یک نگاشت ثابت این تصاویر می‌توانند به تصاویر رنگی با جزییات مشخص‌تری برای تصمیم‌گیری بهتر تبدیل شوند]12[ که مشکلات این کار نیز با کار قبلی یکسان بود.
(نونیکا  و دیگران، 2017) بیان کردند که می‌توان به نسبت کاربردهای مختلف، تصاویر مختلف از لحاظ موضوعی، کیفیت، اندازه، مدهای رنگی و مفاهیم ویژه نگاشت‌های مختلفی را برای تبدیل تصویر دارای سطح خاکستری به تصویر رنگی در نظر گرفت و بعد از آن عملیات نگاشت را اعمال کرد. عملیات نگاشت آن‌ها به صورت ماتریسی بود و ایده اصلی آن ها در دسته بندی تصاویر رنگی و سپس نسبت دادن تصویر دارای سطوح خاکستری به یکی از دسته ها بود. ]13[ راهکار آن‌ها راهکار مناسبی برای برخی از تصاویر بود اما تعمیم ایده آن‌ها بر روی تصاویر دارای پیچیدگی زیاد و یا تصاویر دارای کیفیت پایین که توسط دسته‌بند به راحتی نمی‌توانند به یکی از دسته ها منتسب شوند، نشان داد که راهکار آن‌ها همواره راهکار مطمئنی نمی‌تواند باشد.


2-2- کاربردها و اشکال گوناگون شبکه های مولد متخاصم 
(یان  و همکاران، 2014) با ایجاد یک رقابت بین دو شبکه عصبی که یکی از آن‌ها وظیفه تولید داده را دارد و یکی از آن‌ها وظیفه دسته‌بندی کردن داده‌های واقعی و غیرواقعی را دارد و با در اختیار داشتن نمونه‌های زیادی از داده‌های واقعی و با تکرارپذیر بودن این الگوریتم، شبکه‌ای را طراحی کردند که وظیفه تولید داده‌ها را داشته و می‌تواند داده‌های شبیه به داده‌های واقعی را تولید نماید. ]14[
 پس از معرفی شبکه مولد متخاصم پژوهشگران برای استفاده‌های مختلف در مسایل مطرح شده سعی در تغییر ساختار آن کردند برای مثال (مینگ  و دیگران، 2016) با استفاده از یک جفت شبکه مولد متخاصم نشان دادند که می‌توان کیفیت تولیدات شبکه را در مسایل مختلف تا حد زیادی بالا برد، توپولوژی شبکه و طرز اتصال دو شبکه در قسمت‌های تولید کننده و دسته‌بند از اهمیت ویژه ای برخوردار است. ]15[ هم‌چنین (سوامینتان  و دیگران، 2017) با تغییر ورودی اولیه و کار کردن بر روی مقادیر اولیه ورودی در شبکه‌های مولد متخاصم (که در ابتدا باید داده های تصادفی باشند) رفتار سیستم را هوشمندانه‌تر و داده‌های با کیفیت بالاتری را تولید کردند. برای این کار باید از بین احتمالات موجود در مقداردهی اولیه بیشترین احتمالات را یافته و کار اولیه تولید داده را از آن جا آغاز کرد.]16[ (زیلی  و دیگران، 2017) با دوگانه کردن قسمت موتور مولد در شبکه های مولد متخاصم برای نگاشت‌های دوگانه نشان دادند با یک بار اجرای شبکه می‌توان دو موتور مولد برای دو نگاشت مختلف به یکدیگر پیدا کرد، در هر بار اجرای شبکه، موتور مولد می‌تواند داده‌های اولیه را با نگاشت اول به داده‌های ثانویه و هم چنین داده‌های ثانویه را با نگاشت دوم به داده‌های اولیه تبدیل کند.]17[
این مورد بعد از این اتفاق افتاد که پژوهشگران استفاده از شبکه مولد متخاصم را صرفا برای تولید ندانسته و از آن برای تبدیل یک تصویر به تصویر دیگر نیز استفاده کردند، (ژون  و دیگران، 2017) با استفاده از شبکه‌های متصل به هم و با توپولوژی پشته  و اتصالات موتورهای مولد با هم و قراردادن یک کلاسه‌بند برای هر شبکه مولد دقت کار شبکه را افزایش دادند و در نتیجه عملیات کلاسه‌بندی و همچنین عملیات تولید داده‌ها با کیفیت‌تر کردند و نشان دادند مساله چند مولد بودن و چند تصمیم گیرنده، نظارت‌های چندگانه و داده‌های چند مسیره در پیدایش داده‌های جدید تاثیر به سزایی دارند. ]18[
(کریستین  و دیگران، 2017) با فرض این‌که تصویری رنگی داشته باشیم و به دلیل کاهش حجم کیفیت اولیه را از دست داده باشد، نشان دادند با استفاده از شبکه‌های مولد متخاصم و با توجه به داده‌های موجود زیاد می‌توانیم کیفیت از دست رفته را باز گردانیم و وضوح  تصویر را بالا ببریم. ]19[ (آنتیپوف  و دیگران، 2018) نیز به وسیله شبکه‌های مولد متخاصم و داده-های تصاویر چهره افراد در سنین مختلف توانستند سن چهره افراد را در تصاویر دیجیتال تغییر دهند. ]20[
 



فصل سوم: شبکه‌های عصبی مولد متخاصم و مفاهیم بنیادین در رنگی‌سازی تصاویر سیاه و سفید
در این فصل روش پژوهش به کار رفته در این پایان نامه آورده شده است. رنگی سازی تصاویر سیاه و سفید در پردازش تصویر از ابعاد مختلفی دارای اهمیت است. در روش ارایه شده در این پایان‌ نامه سعی شده است تا از الگوریتم پیشنهادی در کاربردهای بیشتری بتوان استفاده کرد و یک دیدگاه جامع و کلی نگری در روش ارایه شده وجود دارد، به همین دلیل در ادامه توضیحات لازم درباره موارد استفاده شده در روش پیشنهادی این پایان نامه به تفضیل آورده خواهد شد.

3-1- شبکه عصبی
یکی از روش‌های یادگیری ماشین با نظارت می‌باشد که تا حدودی از کارکرد سیستم عصبی انسان الهام گرفته شده است و بر آن اساس سعی در یادگیری و کشف دانش در داده‌های موجود می‌کند. 
کوچکترین واحد هر شبکه عصبی پرسپترون  نام دارد. پرسپترون یک دسته‌بند از نوع دو کلاسه می‌باشد به این معنی که خروجی آن برای هر داده می‌تواند تعیین کند که آن داده در یک کلاس مشخص قرار دارد یا در آن کلاس قرار ندارد. در صورتی که خروجی پرسپترون صفر باشد به معنای عدم تعلق و اگر 1 باشد به معنای تعلق داده به کلاس می‌باشد. تصویر 3-1 یک پرسپترون را با اجزای آن نمایش می‌دهد.
 
تصویر 3-1- پرسپترون

همانطور که در تصویر مشخص می‌باشد هر پرسپترون یک بردار ورودی متشکل از چندین عدد را گرفته و طبق فرمول 2 خروجی f(x) را محاسبه می‌کند.
f(x)= {█(1 if w .x+b>0@0           otherwise)┤
در رابطه بالا w نیز همانند x به شکل بردار می‌باشد، x بردار اعداد ورودی و w بردار وزن‌ها می‌باشد، بایاس  در رابطه با حرف b نشان داده شده است که وظیفه آن جابجا کردن مرز تصمیم‌گیری از مبدأ است و مقدار آن به ورودی‌ها بستگی ندارد. ، ضرب داخلی بردارهای ورودی و وزن از فرمول 3 محاسبه می‌گردد که در آن m تعداد ورودی‌های پرسپترون می‌باشد.
w .x= ∑_(i=1)^m▒〖w_i x_i 〗
دسته‌بند پرسپترون مانند یک ابرصفحه است که فضایm  بُعدی را به دو قسمت تقسیم می‌کند، در این صورتw  نشان‌دهنده بردار عمود برصفحه و b نشان‌دهنده عرض از مبدأ صفحه جداکننده است. اگر داده‌های دو کلاس قابلیت جداشدن توسط یک ابرصفحه را نداشته باشند الگوریتم پرسپترون متوقف نمی‌شود، اما اگر داده‌ها به صورت خطی تفکیک‌پذیر باشند الگوریتم پرسپترون در تعداد متناهی مرحله پایان می‌یابد. معروف‌ترین تابعی که الگوریتم پرسپترون قادر به یادگیری آن نیست تابع XOR است. تصویر شماره 3-2 این مساله را نشان می‌دهد. 
 
تصویر 3-2- مساله XOR

همانطور که در تصویر پیداست دو نقطه آبی از کلاس عدد 1 هستند و دو نقطه قرمز نیز از کلاس عدد صفر هستند. طرز قرارگیری این داده‌ها به گونه‌ای است که که نمی‌توان با یک خط صاف داده‌ها را به دو کلاس مجزا تقسیم نمود به طرزی که داده-های قرمز رنگ یک طرف خط و داده‌های آبی رنگ طرف دیگر خط باشند.
الگوریتم پرسپترون یک الگوریتم تکرار شونده است، به این صورت که در ابتدا بردار وزن و بایاس به وسیله اعداد تصادفی مقداردهی می‌شوند و سپس در هر مرحله، الگوریتم با توجه به نقاطی که درست دسته‌بندی نشده‌ است مقادیر وزن و بایاس را تغییر می‌دهد تا این نقاط به درستی دسته‌بندی شوند. فرمول به روزرسانی وزن‌ها در رابطه شماره 4 آورده شده است که در آن r به عنوان نرخ یادگیری می‌باشد که مقداری ثابت و بین 0 تا 1 تعریف می‌گردد و err میزان خطاهای دسته‌بندی می‌باشد.
w_i^new= w_i^old+r  δerr/(δw_i )
شبکه‌های عصبی از به هم پیوستن پرسپترون‌ها تشکیل می‌شود و شامل 3 بخش اصلی که به آن‌ها لایه گفته می‌شود، هستند: 1. لایه ورودی  2. لایه پنهان  3. لایه خروجی 
لایه ورودی همان‌طور که از اسمش پیداست در برگیرنده‌ی ورودی‌های مساله می‌باشد که در عموم مواقع به تعداد صفات  داده‌ها تنظیم می‌شوند از این رو به تعداد آن‌ها  بُعد  مساله نیز گفته می‌شود. 
هر کدام از ورودی‌ها به یک یا چند پرسپترون از لایه پنهان توسط یک یال  متصل می‌شود که در حالت کاملا متصل به تمامی پرسپترون‌های لایه پنهان متصل می‌شوند.
تعداد پرسپترون‌های لایه‌های پنهان با توجه به مسایل مختلف می‌تواند متفاوت باشد که البته برای بهتر حل شدن مساله قوانینی در این زمینه وجود دارد که یکی از مهم‌ترین این قوانین، قانون گلوگاه می‌باشد که می‌گوید برای کم کردن ابعاد از یک عدد بزرگ به یک عدد کوچک یا بالعکس آن بهتر است یک عدد میانی برای ابعاد لایه پنهان انتخاب شود. برای مثال اگر مساله‌ای دارای 100 ورودی می‌باشد و فقط یک خروجی دارد بهتر است لایه میانی را 50 انتخاب کنیم، همه پرسپترون‌های لایه پنهان همانند پرسپترون‌های لایه ورودی به یک یا چند و در حالت کاملا متصل به تمامی پرسپترون‌های لایه خروجی توسط یال متصل می-گردند.
در شبکه عصبی هر یال در برگیرنده یک وزن می‌باشد که در مرحله آموزش این وزن‌ها به روز رسانی می‌شوند، طرز کارکرد شبکه عصبی به این گونه می‌باشد که در ابتدا همه وزن‌ها به صورت تصادفی مقداردهی اولیه  می‌شوند، بر روی همه داده‌های ورودی عملیات نرمال سازی انجام می‌پذیرد،  مقدار بایاس و نرخ یادگیری تنظیم می‌گردد و عملیات آموزش شروع می‌شود. هر پرسپترون لایه پنهان و لایه خروجی با توجه به تعداد یال‌های ورودی به آن و همانند آن‌چه در مورد یک پرسپترون‌ در رابطه 2 گفته شد از طریق مجموع ضرب وزن‌ها در ورودی‌های مقادیر لایه قبلی که بین آن‌ها اتصال برقرار است، محاسبه می‌گردد و بعد از اعمال اثر بایاس بر روی حاصل، یک تابع فعالسازی  اجرا می‌شود و عدد به دست آمده به عنوان عدد خروجی آن پرسپترون در لایه موجود ذخیره می‌شود.
توابع زیادی برای استفاده در قسمت تابع فعالسازی وجود دارد که به عنوان معروف‌ترین آن‌ها می‌توان از تابع پله ، تابع سیگموید ، تابع خطی  و تابع رِلو  نام برد. نمودار این توابع در تصویر 3-3 نشان داده شده است.
 
تصویر 3-3- برخی از توابع فعالسازی معروف به همراه نمودار

در ابتدا داده‌های موجود را به دو قسمت آموزش و تست تقسیم می‌کنیم. هدف از این کار این است که بتوانیم از روی داده‌های آموزش، سیستم را آموزش بدهیم و سپس بتوانیم نتیجه عملیات آموزش را با اعمال الگوریتم بر روی داده‌های تست مشاهده کنیم که توسط یک معیار ارزیابی بتوانیم تشخیص دهیم آیا آموزش داده شده کیفیت لازم را داشته است یا خیر، از این رو تعداد داده‌های آموزش به طور معمول بیشتر از داده‌های تست می‌باشد.
داده‌های آموزش را به دو دسته آموزش و اعتبارسنجی تقسیم می‌کنیم که داده‌های اعتبار سنجی دقت آموزش را در حین انجام کار بررسی می‌کنند.
برای هر داده‌ موجود در دیتاست  که برای آموزش انتخاب شده است، با استفاده از صفات آن داده، ورودی شبکه عصبی تنظیم می‌گردد و با اطلاع از خروجی مساله برای آن داده (کلاس آن داده)، خروجی شبکه عصبی نیز تنظیم می‌شود، سپس با توجه به فرمول‌های موجود، وزن‌های روی یال‌ها به گونه‌ای به روز رسانی می‌شوند که با محاسبه پرسپترون به پرسپترونِ شبکه با ورودی-های داده شده، شبکه عصبی بتواند به خروجی‌ مورد نظر برسد. این عملیات برای تمامی داده‌های موجود که برای آموزش جدا شده-اند انجام ‌می‌گیرد، سپس داده‌های اعتبارسنجی را بررسی می‌کنیم تا ببینیم تا این مرحله دقت آموزش در چه وضعیتی قرار دارد. سپس ترتیب داده‌های آموزش را به هم می‌ریزیم  و داده‌ها را برای آموزش مجددا به شبکه می‌دهیم، این عملیات را چندین بار تکرار می‌کنیم تا آموزش شبکه عصبی تکمیل شود. شرط توقف آموزش در شبکه‌های عصبی می‌تواند به سه عامل بستگی داشته باشد. مورد اول تعداد تکرار آموزش داده‌ها  می‌باشد که برای مثال آموزش را پس از 100 بار تکرار پایان می‌دهیم، مورد دوم زمانی است که هیچ گونه تغییری در به روزرسانی‌ها اتفاق نمی‌افتد و می‌دانیم شبکه عصبی از حالت فعلی خود بهتر نخواهد شد و مورد آخر زمانی است که شبکه به یک دقت خاص می‌رسد و درصد داده‌هایی را که درست دسته‌بندی می‌کند به یک مقدار تعریف شده می‌رسد.
در آخر داده‌های تست را به ورودی شبکه عصبی می‌دهیم اما این بار قرار نیست وزن‌ها به روز رسانی شود، پس با وزن‌های موجود در یال‌ها پرسپترون‌ها را به ترتیب طی می کنیم تا لایه خروجی را به دست آوریم، از آن‌جایی که از قبل خروجی مساله را برای داده‌های تست نیز داریم، خروجی به دست آمده را با خروجی واقعی مقایسه می‌کنیم و با توجه به یک معیار ارزیابی که برای مثال می‌تواند دقت باشد، کیفیت آموزش شبکه عصبی را به دست می‌آوریم.
باید این نکته را در نظر داشته باشیم که دقت بالا در آموزش همیشه به معنای خوب کار کردن شبکه نمی‌باشد چرا که احتمال آن وجود دارد که شبکه ما دچار پدیده بیش برازش  شده باشد. این پدیده زمانی رخ می‌دهد که شبکه در آموزش داده‌های موجود بیش از حد خوب کار کرده و این مساله باعث می‌شود تا اگر داده‌ی جدیدی حتی با درصد کمی تفاوت نسبت به داده‌های موجود را به شبکه بدهیم نتواند کلاس آن را به درستی تشخیص دهد.
تصویر 3-4 بیانگر این است که برای یک دیتاست دو بعدی چه نوع خطی برای دسته بندی نسبتا مناسب می‌باشد و پدیده بیش برازش چگونه اتفاق می‌افتد، در نمودار سمت راست که دچار بیش برازش شده است اگر داده‌ای جدید نزدیک به منحنی جداساز وارد شود احتمال اشتباه دسته‌بندی شدن آن بیش‌تر از نمودار سمت چپ خواهد بود.
 
تصویر 3-4- دسته بندی نسبتا مناسب و پدیده بیش برازش

لایه‌ی ورودی و لایه‌ی خروجی به طور معمول تک لایه هستند اما لایه پنهان می‌تواند دارای چندین لایه باشد، در صورتی که تعداد لایه‌های پنهان را زیاد کنیم شبکه عصبی تبدیل به شبکه عمیق عصبی می‌شود و در اصطلاح به آن یادگیری عمیق  می-گویند. در تصویر 3-5 دو شبکه عصبی را مشاهده می‌کنید که تصویر سمت چپ یک شبکه عصبی ساده و سمت راست یک شبکه عصبی عمیق می‌باشد.
 
تصویر 3-5- مقایسه شبکه عصبی ساده و شبکه عصبی عمیق

الزامی در عمیق کردن شبکه‌های عصبی نمی‌باشد و برای مسایل مختلف تعداد لایه‌های پنهان را با توجه به همان مساله تنظیم می-کنیم که البته انتخاب تعداد لایه‌های پنهان، بیشتر یک عمل تجربی می‌باشد و قانون خاصی هنوز برای آن تعریف نشده است. ]21[
3-1-1- خودرمزگذار متغیر
یک حالت خاص از انواع شبکه‌های عمیق عصبی می باشد که لایه ورودی و خروجی آن دقیقا همانند هم می باشد و لایه میانی آن نیز با استفاده از معیار واگرایی کولبک-لیبلر  که به عنوان معیاری برای اندازه‌گیری واگرایی یک توزیع احتمال از یک توزیع احتمال ثانویه شناخته می‌شود، به سمت یک توزیع دلخواه (برای مثال گاوسی ) نزدیک شود. واگرایی کولبک-لیبلر توزیع Q نسبت به توزیع P اغلب به صورت DKL(P‖Q) نوشته می‌شود و از طریق رابطه شماره 5 محاسبه می‌گردد.
D_KL (P∥Q)= ∑_i▒〖P(i)  log⁡〖(P(i))/(Q(i))〗 〗
از خودرمزگذار متغیر برای مواردی از قبیل تولید  داده های جدید و فشرده سازی  استفاده می شود. هر خودرمزگذار از دو شبکه تشکیل شده است: 1) رمزگذار  2) رمزگشا .
وظیفه رمزگذار این است که داده ورودی را به لایه میانی تبدیل کند و وظیفه رمزگشا این است که بتواند داده خروجی را از روی لایه میانی بازسازی کند. تصویر 3-6 یک خودرمزگذار متغیر را با اجزای آن نشان می‌هد.
 
تصویر 3-6- خودرمزگذار
در خودرمزگذار متغیر سعی می‌کنیم همانطور که گفته شد لایه میانی را به سمت یک توزیع مشخص نزدیک کنیم.



فصل چهارم: شبکه‌های عصبی مولد متخاصم چندگانه و کاربرد آن در رنگی سازی تصاویر سیاه و سفید
4-1- روش پیشنهادی
در این پایان نامه ما به ارائه یک روش چندگانه از شبکه های مولد متخاصم می پردازیم که در آن با کوچک سازی فضای مساله به ارائه زیر راه حل هایی خواهیم پرداخت که هر یک به تنهایی قادر به رنگی سازی محدوده خاصی از طیف خاکستری در یک تصویر سیاه و سفید هستند چنانکه با ترکیب آنها با یکدیگر همه محدوده صفر تا 255 مقدار تصاویر سیاه و سفید پوشش داده می شود با این مزیت که روش پیشنهادی به دلیل خرد کردن فضای مساله از نتیجه بهتری برخوردار خواهد بود. در ادامه ابتدا روندنمای روش پیشنهادی را نشان خواهیم داد سپس اجزای مورد نیاز برای مساله شبکه های مولد متخاصم چندگانه را معرفی می کنیم و در نهایت مدل چندگانه پیشنهادی را برای مساله رنگی سازی تصاویر سیاه و سفید ارائه می کنیم.


4-2- شبکه‌های مولد  متخاصم 
شبکه مولد متخاصم یکی از ایده‌های تاثیر گذار در دنیای شبکه‌های عصبی و هوش مصنوعی می‌باشد که (یان و همکاران 2014) آن را به وجود آوردند و همان‌طور که از اسم آن نیز پیداست وظیفه‌ی آن تولید داده‌های جدید می‌باشد. تصویر 4-1 منتشر شده در سایت گیت‌هاب  بیانگر تعداد مقالات با موضوعیت شبکه مولد متخاصم در ماه‌های مختلف میلادی تا سال 2018 می‌باشد که بیانگر گرایش پژوهشگران به این موضوع می‌باشد.
 
تصویر 4-1- تعداد مقالات در حوزه شبکه مولد متخاصم به تفکیک در ماه‌های مختلف میلادی

پیشرفت و کارآیی شبکه‌های مولد متخاصم به گونه‌ای بوده است که آقای یان لیسون که یکی از برجسته‌ترین دانشمندان حوزه هوش مصنوعی در دنیاست در مورد شبکه‌های مولد متخاصم گفته است: «از دیدگاه من شبکه‌های مولد متخاصم و مشتقات آن جالب‌ترین ایده در ده سال گذشته در یادگیری ماشین بوده‌اند.» امروزه برنامه‌های کاربردی بسیاری وجود دارد که از این تکنولوژی استفاده می‌کنند، برخی از قسمت‌های نرم افزار فتوشاپ ، برنامه کاربردی تغییر سن چهره ، جعل‌های عمیق  و  موارد دیگر از این قبیل برنامه‌ها هستند. در ادامه در مورد چگونگی کارکرد این شبکه‌ها توضیحاتی را ارایه خواهیم داد.
شبکه‌های مولد متخاصم از سه قسمت کلی و اصلی تشکیل شده اند:
1) مولد 2) بخش داده‌های واقعی 3) دسته‌بند. 
مولد در حقیقت یک شبکه عصبی رمزگشا می‌باشد که یک داده‌های تصادفی از یک توزیع خاص را به عنوان ورودی گرفته و سعی می‌کند از این داده‌های تصادفی به عنوان ورودی، داده‌های واقعی را تولید کند. سیستم کار این شبکه‌ها به گونه‌ای است که در ابتدا اولین داده واقعی موجود در داده‌های واقعی را به عنوان خروجی در نظر می‌گیرد و با به روز رسانی وزن‌های شبکه عصبی سعی می‌کند از اولین داده تصادفی که به عنوان ورودی در نظر گرفته‌ایم خروجی اول را تولید کند. سپس یک داده تصادفی دیگر را برای ورودی درنظر گرفته و با توجه به داده واقعی دوم از داده‌های واقعی موجود که در خروجی قرار می‌گیرد وزن‌های شبکه را به روز رسانی کرده و آموزش‌های لازم برای تولید داده‌ها از ورودی‌های تصادفی را ادامه می‌دهد، این کار را تا آخرین داده واقعی انجام داده و روند تولید داده‌های واقعی از اولین تا آخرین داده را چندین بار تکرار می‌کند. تکرار این روند منجر به یادگیری مولد برای تولید داده‌های جدید از روی داده‌های تصادفی می‌شود.
مولد شبکه توسط داده‌های تصادفی جدید شروع به ساختن داده‌های جدید که تا به حال وجود نداشته‌اند می‌کند. بدیهی است که اگر تعداد داده‌های موجود اولیه زیاد باشد و هم‌چنین تعداد عملیات تکرار به اندازه کافی باشد، آموزش داده شده باعث تولید داده‌های با کیفیت‌تر می‌گردد.
 پس از تولید داده‌های جدید آن‌‌ها را با برچسب "جعلی" ذخیره می‌کنیم و از داده‌های واقعی موجود در شبکه تعدادی را با برچسب "حقیقی" جدا نموده و همراه با داده‌های جعلی برای عملیات دسته‌بندی به دسته‌بند می‌دهیم، دسته‌بند وظیفه شناسایی داده‌های جعلی (تولید شده) از داده‌های واقعی را دارد که این کار را با روش مرسوم دسته‌بندی شبکه‌های عصبی انجام می‌دهد، دسته بند در عمل یک رمزنگار می‌باشد که با یادگیری سعی در ایجاد تمایز و کشف داده‌های واقعی از داده‌های جعلی دارد، البته هدف مولد نیز تولید داده‌های بهتر در جهت شناسایی نشدن آن‌ها توسط دسته‌بند می‌باشد.
در واقع واژه " متخاصم" از تلاش مولد برای بالا بردن کیفیت تولید داده‌ها که منجر به فریب دادن دسته‌بند می‌گردد و تلاش دسته‌بند برای ایجاد تمایز و تشخیص هرچه بهتر و درست داده‌های واقعی و داده‌های تولید شده توسط مولد می‌باشد، که در رقابت با یکدیگر هستند گرفته شده است.
این عملیات تا زمانی ادامه می‌یابد که مولد بتواند داده‌هایی را تولید کند که دسته‌بند قدرت تشخیص آن‌ها از داده‌های واقعی را نداشته باشد، سپس شبکه مولد از شبکه اصلی جدا شده و در جهت تولید داده‌ها ایفای نقش می‌کند.
اگر داده‌های واقعی برای مثال همگی تصویر چهره باشند داده‌های تولید شده تصویر چهره‌ای جدید که در دنیای واقعی وجود ندارد خواهد بود و اگر داده‌های واقعی اشکال مختلفی از دکوراسیون داخل یک اتاق خواب باشند، داده‌های تولید شده تصویری جدید از دکوراسیون اتاق خواب خواهد بود. در تصویر 4-2 می‌توانید اجزای نمونه یک شبکه مولد متخاصم را به طور مثال مشاهده کنید که در آن چگونه شبکه از یک ورودی تصادفی یک داده شبیه به داده‌های واقعی را تولید می‌کند. 
 
تصویر4 1- نمونه یک شبکه مولد متخاصم

در تصویر 4-2، ورودی به صورت تصادفی و از روی یک توزیع خاص انتخاب می‌شود و به عنوان لایه وروی به شبکه مولد داده می‌شود، مولد با توجه به قراردادن داده‌های واقعی در لایه خروجی برای هر ورودی تصادفی (از همان توزیع خاص) آموزش می‌بیند ، سپس به تولید نمونه‌های جدید می‌پردازد. داده‌های تولید شده با برچسب "غیرواقعی" به همراه تعدادی از نمونه‌های موجود در داده‌های واقعی با برچسب "واقعی" به دسته‌بند داده می شود، وظیفه دسته‌بند شناسایی و تفکیک واقعی‌ها از غیرواقعی‌ها می-باشد، در صورتی که دسته‌بند نتواند این کار را به درستی انجام دهد یعنی کیفیت تولیدات دستگاه مولد خوب بوده است در غیر اینصورت با محاسبه تابع خطا و گزارش آن به مولد سعی در بالا بردن کیفیت تولیدات شبکه مولد متخاصم می‌کند.
استفاده از شبکه مولد متخاصم صرفا به ساخت داده‌ها و نمونه‌های جدید ختم نمی‌شود و یکی دیگر از مصارف پرکاربرد آن تبدیل تصاویر  می‌باشد، تنها تفاوت این نوع شبکه‌ها با شبکه عادی فقط در ورودی مولد می‌باشد، به صورتی که برای تولید، لایه ورودی، یک توزیع تصادفی می‌باشد اما در حالتی که قصد تبدیل تصاویر را داریم، ورودی شبکه یک تصویر مشخص می‌باشد. در هر دو حالت، خروجی نیز باید داده‌ای باشد که در داده‌های واقعی موجود است. 
با توجه به مساله موجود در این پایان نامه ما از شبکه مولد متخاصم باید در حوزه تبدیل تصاویر استفاده کنیم، چرا که ورودی مساله ما یک تصویر دارای سطوح خاکستری و خروجی مساله ما همان تصویر به صورت رنگی می‌باشد، تصویر 4-3 بیانگر رفتار یک شبکه مولد متخاصم می‌باشد که عملیات شبه رنگ آمیزی را به صورت ساده انجام می‌دهد.

 
تصویر4 2- یک شبکه مولد متخاصم برای تبدیل تصاویر دارای سطح خاکستری به تصاویر رنگی

همان‌گونه که در تصویر نیز مشخص می‌باشد در این حالت از شبکه ما باید تصاویر دارای سطح خاکستری را که از روی تصاویر رنگی واقعی موجود ساخته‌ایم به عنوان ورودی به شبکه مولد بدهیم و همان تصویر را به صورت رنگی در خروجی قرار دهیم تا شبکه چگونگی تبدیل تصویر دارای سطوح خاکستری به تصویر رنگی را آموزش ببیند. این عملیات باید برای همه تصاویر موجود رنگی در پایگاه داده انجام شود. سپس نمونه‌های ساخته شده را به همراه نمونه‌های حقیقی به دسته‌بند می‌دهیم تا در صورت نیاز به پیشرفت فرآیند تبدیل، این مهم اتفاق بیفتد و شبکه آموزش بهتری از چگونگی تبدیل سطوح خاکستری به پیکسل‌های رنگی ببیند.
البته به دلیل وجود ابعاد بسیار بالا در نگاشت این مساله کیفیت تبدیل‌ها با این روش چندان رضایت‌بخش نخواهد بود، پس در الگوریتم پیشنهادی سعی کردیم ابعاد مساله را به صورت هوشمندانه کاهش دهیم تا با ریز کردن مساله به تکه‌های کوچک‌تر هم کارآیی را بالا ببریم و هم نتایج بهتری را کسب کنیم که در ادامه در مورد آن توضیح خواهیم داد. ]14[

3-4- شبکه مولد متخاصم شرطی 
یکی از انواع شبکه‌های مولد متخاصم، شبکه مولد متخاصم شرطی می‌باشدکه در مواردی که در تولیدات احتیاج داریم، یک تولید چندکلاسه داشته باشیم از این مدل شبکه مولد متخاصم استفاده می‌کنیم.
طرز کار این شبکه همانند شبکه مولد متخاصم ساده می‌باشد با این تفاوت که در ورودی این شبکه در کنار ورودی تصادفی، کلاس داده‌ای که قرار است ساخته شود نیز آورده می‌شود، برای مثال فرض کنید که می‌خواهیم یک فونت جدید از روی نوشته فونت‌های موجود تولید کنیم، ایده اصلی شبکه مولد متخاصم شرطی می‌گوید برای همه حروف فقط یک شبکه اجرا کنیم، برای این کار همانطور که گفته شد نیاز است در زمان تولید کلاس داده‌ای که قرار است تولید شود نیز به شبکه مولد داده می‌شود. در ابتدا کلاس-ها را به یک بردار تنها یک ، تبدیل می‌کنیم. مثلا برای حرف a یک بردار 26 عددی می‌شود که همه اعداد آن صفر هستند و فقط عدد اول برابر یک می‌شود، همین طور برای حرف b همه اعداد به جز عدد دوم صفر می‌باشند و الی آخر. این بردار را به انتهای بردار ورودی اضافه می‌کنیم و شبکه را برای تمامی داده‌های موجود در داده‌های واقعی اجرا می‌کنیم، در نهایت و پس از به دست آوردن تولیدات اولیه در زمانی که قصد داریم داده‌های تولید شده و واقعی را به دسته‌بند بدهیم یک بار دیگر کلاس داده را به انتهای آن اضافه می‌کنیم، این کار را برای تمامی داده‌های واقعی و تولید شده انجام می‌دهیم.
تصویر شماره 4-4 نشان می‌دهد که ساختار یک شبکه مولد متخاصم شرطی چگونه می‌باشد.

 
تصویر4 3- ساختار یک شبکه مولد متخاصم شرطی

این عمل موجب می‌شود که شبکه ما برای تمامی کلاس‌ها آموزش ببینید، بعد از اتمام عملیات یادگیری و جدا کردن شبکه مولد در صورتی که نیاز داشته باشیم یک حرف a تولید کنیم باید بردار مربوط به کلاس این حرف را به انتهای داده ورودی تصادفی جدید اضافه کنیم. ]22[

4-4- قطعه‌بندی  تصاویر
قطعه‌بندی تصاویر در کاربردهای زیادی از پردازش تصویر مورد استفاده قرار می‌گیرد. با توجه به مساله و دلیل اینکه چرا باید یک تصویر را قطعه‌بندی کنیم الگوریتم‌های متفاوتی برای انجام این کار وجود دارد، در این پایان نامه ما تصاویر را با توجه به شدت سطح خاکستریِ  پیکسل‌های تصویر، قطعه‌بندی می‌کنیم. برای این منظور از تکنیک لبه‌یابی  که ساده‌ترین روش برای مجزا کردن قسمت‌های دارای شدت رنگ‌های متفاوت است، استفاده می‌کنیم.
روش های زیادی اعم از روش های قدیمی‌ یا جدیدتر برای لبه‌یابی تصاویر وجود دارد که در این پایان نامه ما از روش بسیار کارآمد و به‌روز دُلار  ]23[ استفاده می‌کنیم که در آن لبه‌های تصویر به گونه‌ای تعیین می‌شود که از سوی سیستم بینایی انسان به طور رضایت بخشی قابل تمایز است این ویژگی که لبه‌های نه چندان مهم در تصویر نتیجه ظاهر نمی‌شوند ولی لبه‌های مهم مشخص می‌شوند از نقاط قوت روش مذکور است که به همین دلیل قابلیت تجزیه تصویر از طریق بافت‌های همسان را دارد و برای روش پیشنهادی ما نیز مناسب می‌باشد. پس از لبه‌یابی هر ناحیه بسته شده توسط لبه‌های تصویر را به عنوان یک قسمت مجزا در نظر می گیریم. تصویر شماره 4-5 ورودی و خروجی الگوریتم لبه‌یابی پیاده سازی شده توسط این روش را نمایش می‌دهد.
 
تصویر4-5- تصویر لبه‌یابی شده توسط الگوریتم دلار

4-5- خوشه بندی 
در تجزیه و تحلیل داده‌ها، روشی که داده‌های فاقد برچسب  را از نظر معیار شباهت  یا در اصل محاسبه فاصله  در خوشه‌های مختلفی قرار می‌دهد خوشه‌بندی نام دارد. خوشه‌بندی یکی از روش‌های یادگیری ماشین بدون نظارت  می‌باشد. باید به این مساله توجه داشت که تعداد خوشه‌ها برای مسایل مختلف متفاوت است و برای الگوریتم‌های مختلف نیز روش به دست آوردن تعداد خوشه‌ها متفاوت است، در برخی الگوریتم‌ها با توجه به داده‌ها و پس از آنالیز آن‌ها، تعداد خوشه‌ها را خود الگوریتم محاسبه می‌کند و در برخی دیگر از ورودی گرفته می‌شود. نکته دیگری که باید به آن توجه داشت این است که معیارهای شباهت سنجیِ بسیاری برای مسایل مختلف وجود دارد که با توجه به نوع مساله انتخاب می‌‌گردند. نوع داده‌ها، اهمیت تفاوت بین داده‌ها، نیاز خروجی مساله و مواردی از این قبیل می‌توانند در انتخاب معیار شباهت مهم باشند.
برای خوشه‌بندی الگوریتم‌های زیادی معرفی شده است که بر اساس یکی از خاصیت‌های: توزیع ، چگالی ، مرکزیت  داده و اتصالات  کار خوشه‌بندی را انجام می‌دهند و بسته به نیاز مساله از آن‌ها استفاده می‌شود. یکی از معروف‌ترین روش‌های خوشه‌بندی کا-میانگین نام دارد که بر اساس مرکزیت داده کار می‌کند و در این پایان نامه ما از این روش برای خوشه‌بندی قطعات استخراج شده از تصاویر استفاده کرده‌ایم.
کا-میانگین یکی از معروف‌ترین روش‌های خوشه‌بندی می‌باشد که روشی در کمی‌سازی بردارهاست و در اصل از پردازش سیگنال  گرفته شده و برای آنالیز خوشه‌بندی در داده‌کاوی محبوب است. کا-میانگین خوشه‌بندی با هدف تجزیه n مشاهدات به k خوشه است که در آن هر یک از مشاهدات متعلق به خوشه‌هایی با نزدیکترین میانگین آن است، این میانگین به عنوان پیش‌نمونه استفاده می‌شود. در ابتدا به اندازه k (همان تعداد خوشه‌ها که از ورودی گرفته می‌شود) نقطه در فضای مساله را به صورت تصادفی به عنوان مراکز خوشه‌ها انتخاب می‌کند و برای داده‌ها به صورت تک به تک فاصله آن‌ها را با مراکز خوشه‌ها سنجیده و هر داده را به خوشه نزدیکتر نسبت می‌دهد، باید توجه داشت که الگوریتم محاسبه فاصله بسته به نوع مساله می‌تواند متغیر باشد، در این پایان نامه برای محاسبه فاصله ما از روش فاصله اقلیدسی استفاده کرده‌ایم. فاصله اقلیدسی فاصله معمولی دو نقطه است که توسط قضیه فیثاغورس بدست می‌آید. فاصله دو نقطه p و q اندازه پاره‌خطی‌ست که آنها را به هم متصل می‌کند که برای محاسبه آن از رابطه 6 استفاده می‌کنیم.
√(∑_(i=1)^n▒(p_i- q_i )^2 )
سپس با توجه به میانگین هر خوشه به وجود آمده از داده‌ها، مراکز خوشه را به روز رسانی می‌کند، یعنی مرکز خوشه قدیم که به صورت تصادفی انتخاب شده بود حذف می‌گردد و مرکز جدید برابر میانگین خوشه به وجود آمده می‌شود در ادامه دوباره عملیات فاصله سنجی برای هر داده و نسبت دادن آن به نزدیکترین مرکز خوشه و به روز رسانی مراکز را انجام می‌دهد، این عملیات را تا زمانی که به روز رسانی جدید اتفاق نیفتد دنبال می‌کند. 
همان‌طور که گفته شد به منظور این‌که تعداد مشخص و با بهره‌وری مناسب داشته باشیم 256 خوشه به وجود آمده را به تعداد کمتری باید کاهش دهیم. ما در این پایان نامه تعداد مناسب برای حل مساله شبه رنگ آمیزی را برابر عدد 10 در نظر گرفته‌ایم. روش انتخابی ‌خوشه‌بندی روش کا-میانگین می‌باشد، در تصویر 4-6 نمودار آبی رنگ نشان دهنده تعداد قطعات در هر کدام از اعداد منتسب بین 0 تا 255 می‌باشد و خطوط نقطه چین قرمز رنگ مرز بین خوشه‌ها می‌باشد.


 
تصویر4-6- تعداد قطعات در هر کدام از اعداد منتسب به هر قطعه و مرز بین خوشه ها

در تصویر بالا که یک هیستوگرام  می‌باشد فراوانی  هر عدد منتسب به قطعات با رنگ آبی مشخص شده است و به وضوح قابل مشاهده می‌باشد که توزیع داده‌ها بر اساس یک توزیع خاص نمی‌باشد، قطعات قرار گرفته در بین خطوط قرمز در یک خوشه قرار دارند. با توجه به اینکه قبلا نیز گفته شد این عملیات جهت کم کردن تعداد خوشه‌ها برای صرفه‌جویی در زمان و مصرف منابع سیستم توسط شبکه‌ چندگانه مولد متخاصم می‌باشد، پس در حال حاضر آماده اجرای شبکه چندگانه مولد متخاصم هستیم. ]24و 25[

6-4- شبکه چندگانه مولد متخاصم
همان‌گونه که پیشتر نیز در ‌این‌باره صحبت شد ایده‌ی اصلی این پایان نامه بر روی چندگانه کردن شبکه مولد متخاصم می‌باشد. با توجه به پیش‌پردازش انجام شده بر روی داده‌ها و قطعه‌بندی تصاویر در ابتدا باید در نظر داشت که در اصل ورودی مولد ما قطعات تصاویر دارای سطوح خاکستری می‌باشند و  خروجی مولد باید قطعه رنگی متناظر با قطعه ورودی باشد. 
در تصویر 4-7 روند کلی کار شبکه چندگانه مولد متخاصم را مشاهده می‌کنید.
 
تصویر4 4- شبکه چندگانه مولد متخاصم در مساله شبه رنگ آمیزی

در آخر زمانی که همه قطعات را به قطعات رنگی تبدیل کردیم، باید از ترکیب آن‌ها تصویر اولیه رنگی شده را بازسازی کنیم. ]26[ به دلیل این‌که احتمال دارد روی مرزها و به دلیل اینکه از یک طیف رنگی به طیف رنگی جدیدی حرکت می‌کنیم کیفیت تصویر به گونه‌ای به هم بریزد که لبه‌های تصویر بیش از حد نمایان و تیز  شود. برای رفع این مشکل پیکسل‌های دارای همسایگی با مرزهای قطعات تصویر (یعنی دو طرف خط مرز) را با یکدیگر جمع و نتیجه را بر 2 تقسیم می‌کنیم (میانگین می-گیریم) و نتیجه را به جای هر دو پیکسل قرار می‌دهیم. با این کار لبه‌های تیز شده تصویر را تا حدودی نرم  می‌کنیم. ]27[
استفاده از شبکه چندگانه مولد متخاصم برای حل مسایل چند کلاسه راه حل مناسبی به نظر می‌رسد، اگر چه تنها راه حل ارایه شده برای مسایل این‌چنینی فقط استفاده از شبکه چندگانه مولد متخاصم نمی‌باشد.
یکی از راهکارهای موجود برای حل مساله استفاده از شبکه مولد متخاصم شرطی می‌باشد که در مقایسه با شبکه چندگانه مولد متخاصم راهکار مناسبی نیست، به صورت تجربی مشاهده می‌گردد که یک شبکه مولد متخاصم شرطی بعد از اجرا و اتمام عملیات یادگیری و در زمان تولید، به تعداد نسبتا کمی تولیدِ موفق منجر می‌شود، یعنی شبکه مولد متخاصم شرطی در زمان تولید داده‌ها از یک کلاس خاص علی‌رغم داشتن آن کلاس در انتهای ورودی، نمیتواند همیشه موفق ظاهر بشود و فقط آن کلاس را تولید کند، در تولیدات این شبکه مشاهده می‌گردد که همواره در یک سریِ تولیداتی (برای مثال تولید تعداد مشخصی نمونه جدید از یک کلاس خاص) همواره تولیداتی از بقیه کلاس ها ظاهر می‌شوند که البته از ضعف های شبکه رقابتی شرطی به حساب می‌آید.
یکی از دلایل به وجود آمدن این تولیدات اضافه، سایز بردار کلاس می‌باشد. فرض کنید برای تولید اعداد صفر الی 9 ما یک شبکه مولد متخاصم شرطی اجرا می‌کنیم، که هر داده واقعی در آن به صورت تصویر ذخیره شده و با ابعاد 28x28 موجود می‌باشد، این مورد به این معنی می‌باشد که هر تصویر دارای 784 پیکسل می‌باشد که به عنوان خر.جی مولد باید به مساله داده ‌شود.
برای ورودی شبکه مولد باید یک بردار تصادفی را انتخاب کنیم که در این مثال فرض شده است تعداد ورودی‌های‌ مساله برابر 300 باشد، یعنی هر داده تصادفی برای ورودی شامل 300 عدد می‌باشد، در این حالت بعد از اضافه کردن بردار کلاس‌ها که تعداد آن برابر 10 عدد می‌باشد ورودی مساله با اندازه 310 به شبکه مولد داده می‌شود. نیرویی که از سمت ورودی کلاس‌ها می‌باشد (9 عدد صفر و 1 عدد یک) برای تغییر شبکه و سوق دادن آن به سمت آن کلاس و دور شدن از بقیه کلاس‌ها نیروی زیادی نخواهد بود، زیرا عملا در هر بار، 9 عدد صفر موجود در بردار که تغییر چندانی بر رفتار سیستم نخواهند داشت و 1 عدد یک موجود در بردار به همراه وزن موجود در یال آن تاثیر ناچیزی بر روی شبکه خواهد گذاشت. به همین دلیل مشاهده می‌گردد که در تولیدات یک شبکه مولد متخاصم شرطی زمانی که یک بردار کلاس به انتهای یک ورودی تصادفی اضافه می‌کنیم تعداد تولیدات از آن کلاس خاص بیشتر از تولیدات بقیه کلاس‌ها خواهد بود، اما این مساله به این معنی نیست که تولیدات فقط از آن کلاس خاص خواهد بود و از بقیه کلاس‌ها هیچ داده تولید شده‌ای نخواهیم داشت.
حال فرض کنید همانند مساله موجود در پایان نامه برای مسایلی که حساسیت زیادی روی تولیدات و کلاس‌های آن‌ها وجود دارد استفاده از شبکه مولد متخاصم شرطی نمی‌تواند چندان دقیق باشد، پس در معیار سنجش دقت شبکه چندگانه مولد متخاصم از شبکه رقابتی شرطی برتر می‌باشد.
معیار دیگری که برای استفاده ما از شبکه چندگانه مولد متخاصم وجود دارد، معیار زمان و پیچیدگی می‌باشد. با اشاره به این مساله که تعداد داده‌های اولیه موجود برای هر کدام از شبکه‌های چندگانه مولد متخاصم و شبکه مولد متخاصم شرطی یکسان می‌باشد و برای هر داده به تعداد مشخصی عملیات یادگیری را انجام دهیم، عملا می‌توان نتیجه گرفت که از این نظر تفاوت چندانی در زمان و پیچیدگی وجود ندارد، اما با توجه به این‌که شبکه‌ چندگانه مولد متخاصم قابلیت اجرای موازی  را دارد به راحتی می‌توان اثبات نمود که زمان مصرفی در شبکه‌های چندگانه به شدت کمتر از شبکه مولد متخاصم شرطی می‌باشد.
در مثالی که ذکر شد در فرض مساله ما تعداد داده‌های موجود برای راه‌اندازی شبکه مولد متخاصم شرطی و شبکه چندگانه مولد متخاصم را برابر هم در نظر گرفتیم، یکی از دلایلی که استفاده از شبکه مولد متخاصم شرطی را توجیه می‌کند این است که داده-های با کلاس‌های متفاوت دارای وجوه مشترک زیادی هستند و شبکه مولد متخاصم شرطی این ویژگی‌های مشترک را نیز فرا می-گیرد، حال آن‌که در شبکه‌های چندگانه مولد متخاصم نیز این مورد در مقداردهی اولیه وزن‌های شبکه لحاظ می‌گردد به صورتی که در ابتدا اولین شبکه را اجرا می‌کنیم و بقیه شبکه‌ها از روی شبکه آماده موجود مقداردهی اولیه می‌شوند این مساله باعث یکنواختی بیشتر در مساله می‌شود و با استفاده از آن می‌توان تعداد کمتری داده‌های واقعی جهت آموزش هر شبکه مولد متخاصم انتخاب کرد که این کار مصرف منابع سیستم توسط شبکه مولد متخاصم را به شدت کاهش می‌دهد. اگر چه کم کردن تعداد داده‌های واقعی نباید بیش از یک حد مشخص باشد.

با پیاده‌سازی این ایده و دیدن نتایج به دست آمده (که در فصل بعدی نشان داده می‌شوند) می‌توان به موفقیت این ایده از لحاظ کیفیت تولیدات، کم کردن پیچیدگی‌های مساله و زمان در قیاس با سایر روش‌ها پی برد. پیاده‌سازی‌های صورت گرفته برای ایده این پایان نامه بر روی سیستم عامل ویندوز و تحت زبان برنامه‌نویسی پایتون می‌باشد. سخت افزار این سیستم متشکل از یک پردازنده مرکزی مدل آی 7 ، دارای 16 گیگابایت حافظه موقت  و یک کارت گرافیک مدل جی تی ایکس 1080  می باشد. مدت زمان تقریبی آموزش حدود 8 ساعت بوده است.


فصل پنجم: نتایج تجربی و تحليل آزمایش‌ها
انتخاب دیتاست  تصاویر رنگی، و نتایج به دست آمده به همراه مقایسه با سایر روش‌ها مواردی هستند که در این فصل در مورد آن‌ها توضیح خواهیم داد.

5-1- انتخاب دیتاست
انتخاب دیتاست در مسایل یادگیری ماشین از مهم‌ترین موارد می‌باشد. دیتاست شامل مجموعه‌ای از داده‌ها می‌باشد که توسط الگوریتم‌های یادگیری ماشین باید پردازش شده و نسبت به رفتار داده‌های موجود در این دیتاست آموزش می‌بیند.
با این تعریف اهمیت انتخاب دیتاست مشخص می‌گردد. در رابطه با مساله موجود در این پایان نامه انتخاب‌های فراوانی برای دیتاست وجود داشت. از معروف‌ترین این دیتاست‌ها می‌توان Image Colorization ، Flickr  و ImageNet  را نام برد. به جهت ابعاد بالای مساله و تلاش ما در جهت هر چه بهتر شدن نتایج در راستای تنوع تصاویر از بین گزینه‌های موجود دیتاست ImageNet را انتخاب کردیم. ]28[
دیتاست ImageNet دارای بیش از 14 میلیون تصویر در بخش‌های مختلف و با تنوع فراوان می‌باشد. به دلیل اینکه روش پیشنهاد شده در این پایان نامه برای اولین بار در دنیا ارائه می‌گردد برای شروع ما از میان 14 میلیون سعی کردیم فقط 40،000 تصویر را به صورت تصادفی انتخاب کنیم و نتایج اولیه را مشاهده کنیم، در صورت نیاز طبیعتا امکان بیشتر شدن تعداد داده‌های دیتاست نمونه وجود داشت که در ادامه و برای بالا بردن کیفیت آموزش و رنگ آمیزی تصاویر این تعداد را به 100،000 نمونه افزایش دادیم.
پس از انتخاب تصادفی 100 هزار نمونه و ذخیره سازی آن‌ها در رسانه‌های ذخیره‌سازی سعی در ذخیره‌سازی معادل همان تصاویر به صورت تصاویر دارای سطوح خاکستری نیز می‌کنیم. با این کار در واقع تعداد تصاویر ما در دیتاست 200 هزار نمونه می گردد که 100 هزارتای آن‌ها رنگی و 100 هزارتای دیگر همان تصاویر و به صورت تصاویر دارای سطح خاکستری می-باشند.

2-5- پیش پردازش داده‌ها 
در روش پیشنهاد شده در این پایان نامه و با توجه به وجود بافت‌های مشترک در تصاویر (برای مثال بافت برگ‌های درختان، دریا، آسمان و ...) سعی در آن داریم که تصاویر را با توجه به این بافت‌های مشترک قطعه‌بندی کرده و سپس هر کدام از بافت‌ها را در یک خوشه مجزا قرار دهیم و سپس برای هر خوشه یک شبکه مولد متخاصم را اجرا کنیم. 
در مرحله پیش‌پردازش داده‌ها باید بتوانیم تصاویر را از نظر شدت رنگ   قطعه‌بندی کنیم. برای این کار و پیدا کردن مرز بین قطعات هر تصویر از نظر شدت رنگ از روش لبه‌یابی دلار استفاده می‌کنیم.
الگوریتم دلار را بر روی تمامی تصاویر دارای سطوح خاکستری که برای آموزش انتخاب کرده‌ایم اعمال می‌کنیم تا بتوانیم هر تصویر را به قطعات مختلف تقسیم ‌کنیم، به هر قطعه یک عدد منتسب می‌کنیم که آن عدد از میانگین پیکسل‌های درون آن قطعه به دست می‌آید، تصویر شماره 5-1 چگونگی انجام اعمال لبه‌یابی، سپس قطعه‌بندی و انتساب میانگین پیکسل‌های درون آن قطعه را بر روی یک تصویر نشان می‌دهد. 
 
تصویر5-1-  قطعه بندی و انتساب میانگین هر قطعه از تصویر به آن قطعه

با توجه به این موضوع که تمامی پیکسل‌های درون تصاویر دارای سطوح خاکستری اعدادی بین صفر تا 255 را دارا هستند پس میانگین آن‌ها نیز بین 0 تا 255 خواهد بود و این نتیجه حاصل می‌گردد که تمامی اعداد منتسب به قطعات بین صفر تا 255 خواهد بود و این به این معنی است که در نهایت ما 256 حالت مختلف از اعداد منتسب به قطعات را داریم.
پس از انجام این کار معادل رنگی هر قطعه از تصویر متناظر با تصویر دارای سطح خاکستری استخراج می‌گردد و به دلیل اینکه مساله ما در اصل یک مساله تبدیل تصویر  می‌باشد هر دو قطعه متناظر (دارای سطوح خاکستری و رنگی) در انبار داده  با یک شناسه  متناظر به همراه عدد منتسب به آن قطعه ذخیره می‌گردد.
همان‌طور که پیش از این عنوان شد در الگوریتم پیشنهاد شده در این پایان نامه مرحله یادگیری ماشین توسط شبکه‌های چندگانه مولد متخاصم انجام خواهد شد، برای این موضوع در همین مرحله می‌توانستیم به تعداد اعداد منتسب شده به قطعات (256 عدد) خوشه بسازیم و هر قطعه‌ را در خوشه متناظر با عدد منتسب به آن بگذاریم، سپس برای هر خوشه یک شبکه مولد متخاصم اجرا نماییم و هر خوشه را به یک شبکه بسپاریم تا طرز رنگی سازی آن را آموزش ببیند، اما این کار هزینه زیادی از لحاظ مصرف منابع و زمان خواهد داشت، پس عمل بعدی باید این باشد که بتوانیم تعداد 256 خوشه موجود را به تعداد خوشه کمتری کاهش دهیم، این عمل باید به صورت هوشمندانه و به گونه‌ای انجام شود که بیشترین بهره‌وری را داشته باشیم، به همین دلیل از روش-های موسوم به خوشه‌بندی که در مباحث یادگیری ماشین وجود دارد استفاده می‌کنیم.

5-3- نتایج پیاده سازی روش پیشنهادی
پس از پیاده‌سازی روش پیشنهادی توضیح داده شده در فصل‌ سوم نتایج به دست آمده از این روش را، در این فصل به همراه مقایسه با سایر روش‌ها و تحلیل نتایج می‌آوریم. در تصویر 5-2 که در ادامه آورده شده است نتایجی را از نمونه خروجی روش پیشنهادی مشاهده می‌کنیم که در آن ستون سمت چپ تصاویر دارای سطوح خاکستری که به عنوان ورودی از آن استفاده نموده‌ایم، ستون میانی نتایج کار و ستون سمت راست تصاویر رنگی و مرجع اصلی ورودی موجود می‌باشد.
 
تصویر5-2- نتایج کار به همراه ورودی و تصاویر رنگی اصلی

با توجه به نتایج به دست آمده می‌توان به این نتیجه رسید که علیرغم این‌که الگوریتم ارائه شده در این پایان نامه فقط و فقط تصویر دارای سطوح خاکستری را به عنوان ورودی می‌گیرد و هیچ گونه پارامتر دیگری از جمله، برچسب تصویر و یا تصویر رنگی کمکی برای رنگ آمیزی را به عنوان ورودی مساله دریافت نمی‌کند، با کیفیت قابل قبولی خروجی تصویر رنگ آمیزی شده را ارائه می‌دهد.

4-5- نتایج روش پیشنهادی و مقایسه با روش های مشابه
در تصویر 5-3 یک نمونه از خروجی الگوریتم به همراه ورودی، تصویر رنگی مرجع و هم‌چنین خروجی (لارسن و همکاران 2016)[23] را مشاهده می‌کنیم.
 
تصویر5-3- مقایسه خروجی شبکه چندگانه مولد متخاصم 

با دقت به جزییات هر تصویر تفکیک‌پذیری رنگی بیشتر نتایج الگوریتم شبکه چندگانه مولد متخاصم را می‌توان مشاهده نمود، این تفکیک‌پذیری به دلیل چندگانه شدن روش یادگیری شبه رنگ آمیزی می‌باشد. مورد دیگری که در این نتایج و قیاس آن با کار (لارسن و همکاران 2016) به چشم می‌آید تنوع رنگی بیشتر در روش پیشنهادی ما می‌باشد، علت بیشتر بودن تنوع رنگی به دلیل جدا کردن بافت‌ها در ابتدای کار از طریق قطعه‌بندی می‌باشد که منجر به متنوع شدن تعداد رنگ‌ها در عملیات رنگی سازی می-شود.
تصویر 5-4 خروجی دیگری از کار را نشان می‌دهد که با چندین نمونه از کارهای مشابه قیاس شده است.
 
تصویر 5-4- خروجی الگوریتم پیشنهادی ما و قیاس با کارهای مشابه (نقاشی‌ها)

این تصاویر محک خوبی برای تست کردن الگوریتم پیشنهادی ما به حساب می‌آیند، چرا که پیچیدگی بالایی دارند و از طرفی نمونه آن‌ها به عنوان تصاویر نقاشی در دیتاست انتخابی ما نبوده است، علیرغم این‌که تصاویر دارای پیچیدگی بالا و رنگ‌های خاص هستند در عموم موارد کشف طیف رنگی اصلی خوب انجام شده است، اگر چه در بعضی از قطعات کیفیت رنگ آمیزی مناسب نبوده است.
در تصویر 5-5 نیز تصاویر دیگری را از خروجی پژوهش انجام شده مشاهده می‌کنید که البته این تصاویر رنگی واقعی هیچ کدام در دنیای واقعی وجود ندارد.
 
تصویر5-5- نمونه دیگری از خروجی پژوهش انجام شده و قیاس با روش‌ [۲۷]

همان‌گونه که مشاهده می‌کنید در این نمونه ها نیز کیفیت و تنوع رنگ آمیزی توسط الگوریتم پیشنهاد شده در این پژوهش عیان می-باشد.
5-5- نتایج روش پیشنهادی بر روی تصاویر واقعی
تصویر 5-6 خروجی دیگری از روش پیشنهادی ما را نشان می‌دهد.
 
تصویر5-6- خروجی دیگری از الگوریتم پیشنهادی ما
شبه رنگ آمیزی انجام شده در تصاویر بالا نشان از قدرت الگوریتم شبکه چندگانه مولد متخاصم می‌باشد. تصویر 5-7 نشان دهنده خروجی الگوریتم پیشنهادی بر روی تصاویر قدیمی می‌باشد که بی شک مشاهده رنگی این تصاویر لذتی دوچندان خواهد داشت.

 
تصویر5-7- شبه رنگ آمیزی تصاویر قدیمی
برج آزادی تهران در حال ساخت، میدان شهرداری شیراز، مسجد وکیل، ستارخان، غلامرضا تختی، سعدیه در عصر قاجار، آلن تورینگ، میرزا رضا کرمانی و نیکولاس تسلا تصاویر قدیمی هستند که در این مجموعه و توسط الگوریتم پیشنهادی ما آن‌ها را به تصاویر رنگی تبدیل نموده‌ایم.
نتایج بیشتری بر روی تصاویر قدیمی دیگر نیز اعمال شده است که در پیوست شماره 1 قابل مشاهده هستند.






